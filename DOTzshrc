# vim: ft=sh
# Path to your oh-my-zsh configuration.

export LANG=en_US.UTF-8

alias s=screen
alias rsync="rsync -P --hard-links -r"
alias grep="grep --color=auto"
alias less="less -R"
alias now="date '+%Y%m%d-%H%M%S-%N'"
alias rn=react-native

if [ -d /usr/local/share/zsh-completions ]; then
  fpath=(/usr/local/share/zsh-completions $fpath)
fi

typeset -U path cdpath fpath manpath

if [[ "$TERM" != "screen-256color" ]]; then
  export TERM=xterm-256color
fi

prepend_to_path () {
  while [ $# -gt 0 ];do
    if [ -d $1 ]; then
      path=($1(N-/) $path)
    else
      : # echo "!" $1
    fi
    # echo "+" $1
    # echo "=" $PATH
    shift
  done
}

prepend_to_path \
  "$HOME/.__me"                         \
  "$HOME/.cabal/bin"                    \
  "$HOME/homebrew/bin"                    \
  "$HOME/.local/bin"                    \
  "$HOME/local/bin"                    \
  "$HOME/Library/Python/3.7/bin"

if [[ -d "$HOME/Library/Android/sdk" ]]; then
  export ANDROID_HOME="$HOME/Library/Android/sdk"
  prepend_to_path "$HOME/Library/Android/sdk/platform-tools"
elif [[ -d "$HOME/Android/Sdk" ]]; then
  export ANDROID_HOME="$HOME/Android/Sdk"
  prepend_to_path "$HOME/Android/Sdk/platform-tools"
fi


ZSH_THEME="my-theme"
# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment this to disable bi-weekly auto-update checks
DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(profiles git screen command-not-found adb brew bundler cabal dircycle docker docker-compose emoji-clock encode64 extract gem git-extras git-flow gradle history history-substring-search ruby rvm screen systemd)
# no specify: dirty
GIT_STATUS_IGNORE_SUBMODULES=git

zstyle ':completion:::*:default' menu no select
zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'

ZSH=$HOME/.oh-my-zsh
ZSH_CUSTOM=~/.zsh-custom
source $ZSH/oh-my-zsh.sh

# The following lines were added by compinstall
zstyle :compinstall filename "$HOME/"

autoload -Uz compinit
compinit
# End of lines added by compinstall

[[ -f "$HOME/.zshrc.local" ]] && source "$HOME/.zshrc.local"

gitat () {
    local date="date"
    # prefer gnu date if exists
    # BSD date is not supported
    if which gdate &> /dev/null; then
      date="gdate"
    fi
    if [[ $# -eq 0 ]]; then
        unset GIT_AUTHOR_DATE
        unset GIT_COMMITTER_DATE
        echo "unsetting GIT_AUTHOR_DATE and GIT_COMMITTER_DATE"
    elif now="$($date --date=$1)"; then
        echo "setting GIT_AUTHOR_DATE=GIT_COMMITTER_DATE=$now"
        export GIT_AUTHOR_DATE="$now"
        export GIT_COMMITTER_DATE="$now"
    fi
}

greptodo () {
  grep -Rin -w -e todo -e fixme "$@"
}

txz-archive () {
  if [[ $# -ne 1 ]]; then
    echo "USAGE: txz-dir DIR"
    return 1
  fi
  time tar cJvf "$1.txz" "$1" && rm -rvf "$1"
}

[[ -f /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] \
  && source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# gpg agent
if type gpg >/dev/null ; then
  export GPG_TTY="$(tty)"
  export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
  gpgconf --launch gpg-agent
  gpg-connect-agent updatestartuptty /bye > /dev/null
fi
